import streamlit as st
from views.dashboard import show_dashboard
from views.map_view import show_map_page
from views.analytics import show_analytics_page
from views.forecasting import show_forecasting_page
from views.account import show_account_page
from utils.check_auth import check_auth
from utils.logger import setup_logger
import logging
from config import APP_CONFIG

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = setup_logger(__name__)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    init_session_state()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    st.set_page_config(
        page_title="Real Estate Analytics",
        page_icon="üè†",
        layout="wide",
        initial_sidebar_state="expanded",
        menu_items={}
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if not check_auth():
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–µ–Ω—é
    render_sidebar()
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    render_current_page()
    
    # –û—Ç–ª–∞–¥–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ (–º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å)
    # if APP_CONFIG.get('debug', False):
    #     st.sidebar.markdown("---")
    #     st.sidebar.subheader("–û—Ç–ª–∞–¥–∫–∞")
    #     st.sidebar.write(st.session_state)

def init_session_state():
    if 'page' not in st.session_state:
        st.session_state.page = 'dashboard'
    
    if 'search_query' not in st.session_state:
        st.session_state.search_query = None
    
    if 'user' not in st.session_state:
        st.session_state.user = {
            'authenticated': True,  
            'username': 'demo_user',
            'role': 'analyst'
        }

def render_sidebar():
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    with st.sidebar:
        st.markdown("## –ù–∞–≤–∏–≥–∞—Ü–∏—è")
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_options = {
            'dashboard': {'icon': 'üè†', 'label': '–ì–ª–∞–≤–Ω–∞—è'},
            'map': {'icon': 'üó∫Ô∏è', 'label': '–ö–∞—Ä—Ç–∞'},
            'analytics': {'icon': 'üìä', 'label': '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞'},
            'forecasting': {'icon': 'üîÆ', 'label': '–ü—Ä–æ–≥–Ω–æ–∑—ã'},
            'account': {'icon': 'üë§', 'label': '–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç'}
        }
        
        for page, config in nav_options.items():
            if st.button(f"{config['icon']} {config['label']}", key=f"nav_{page}"):
                st.session_state.page = page
                st.rerun()
        
        st.markdown("---")
        
        # –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        if st.session_state.user['authenticated']:
            st.markdown(f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ **{st.session_state.user['username']}**")
            if st.button("üö™ –í—ã–π—Ç–∏", key="logout_btn"):
                st.session_state.user['authenticated'] = False
                st.rerun()
        else:
            if st.button("üîë –í–æ–π—Ç–∏ / –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", key="login_btn"):
                st.session_state.show_login = True
                st.rerun()

def render_current_page():
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏"""
    try:
        if st.session_state.page == 'dashboard':
            show_dashboard()
        elif st.session_state.page == 'map':
            show_map_page()
        elif st.session_state.page == 'analytics':
            show_analytics_page()
        elif st.session_state.page == 'forecasting':
            show_forecasting_page()
        elif st.session_state.page == 'account':
            show_account_page()
        else:
            st.warning("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            st.session_state.page = 'dashboard'
            st.rerun()
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
        if APP_CONFIG.get('debug', False):
            st.exception(e)

if __name__ == "__main__":
    main()